<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Showcase Template</title><link>https://joluva.github.io/showcase/</link><description>Recent content in Introduction on Showcase Template</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://joluva.github.io/showcase/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://joluva.github.io/showcase/docs/nosotros/jose/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/nosotros/jose/</guid><description> Jose Luis Moreno Hernandez # Hijo, hermano, estudiante, amigo y padre de un hermoso gato. Apasionado por la programación competitiva y actualmente clasificado a la maratón regional de la ICPC representando a la Universidad Nacional. En mis hobbies está el tenis de mesa, los videojuegos y aprender idiomas, actualmente hablo español, inglés y alemán.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/nosotros/luis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/nosotros/luis/</guid><description>Luis Alfonso Diaz Vergel # Soy estudiante de Ingeniería de Sistemas y Computación en la Universidad Nacional de Colombia. Soy foráneo de Ocaña, Norte de Santander. Mi pasatiempo principal son los videojuegos. Soy entusiasta del hardware, pero me gusta mucho el desarrollo de software y recientemente me he interesado mucho sobre la ciberseguridad. Tengo experiencia en los lenguajes: HTML, CSS, JavaScript, Python, C++, C# y Java con manejo de base de datos SQL.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/nosotros/vale/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/nosotros/vale/</guid><description>Valentina Colmenares Leguízamo # Estudiante de ingeniería de sistemas en la Universidad Nacional de Colombia. Me gusta mucho hacer ejercicio, leer, ver películas, conocer lugares nuevos, bailar, pertenezco al proyecto estudiantil Mermaids Dance Team donde competimos a nivel nacional e internacional en la categoría POM OPEN. Me interesa mucho la ciberseguridad, el desarrollo tanto Web como móvil y he trabajado con los lenguajes de programación Python y Java. En este curso de computación visual espero aprender sobre diferentes técnicas de computación gráfica para el procesamiento de imágenes y modelados 3D.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/shortcodes/p5/iframe/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/shortcodes/p5/iframe/</guid><description>p5 iframe shortcodes embed p5.js code within an iframe element. There are two p5 iframe shortcodes: p5-iframe and p5-global-iframe.
p5-iframe # {{&amp;lt; p5-iframe ver=&amp;#34;1.5.0&amp;#34; sketch=&amp;#34;/path/to/sketch.js&amp;#34; lib1=&amp;#34;https://cdntolib1/lib1.js&amp;#34; width=&amp;#34;800&amp;#34; height=&amp;#34;600&amp;#34; &amp;gt;}} All parameters are optional but sketch. Default values are shown in the above snippet but for libs*. Up to lib5 libs may be specified.
Color relativity # Look at this brief explanation about what color relativity is.
p5-iframe markdown {{&amp;lt; p5-iframe sketch=&amp;#34;/showcase/sketches/colors.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/visual-Illusions/Coloring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/visual-Illusions/Coloring/</guid><description>Coloring # Color blindness # Problema # Implementar una aplicación de mapeo de colores que ayude a las personas daltónicas a ver los colores que les rodean.
Introducción # La daltonismo es una discapacidad visual que afecta a aproximadamente el 8% de la población masculina y el 0.5% de la población femenina. Esta condición hace que las personas tengan dificultades para distinguir ciertos colores y tonalidades, lo que puede dificultar su vida cotidiana en situaciones en las que los colores son importantes, como la señalización vial o la elección de la ropa.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/shortcodes/p5/div/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/shortcodes/p5/div/</guid><description>p5 div shortcodes embed p5.js code within a div element. There are two p5 div shortcodes: p5-div and p5-instance-div.
p5-div # {{&amp;lt; p5-div ver=&amp;#34;1.5.0&amp;#34; sketch=&amp;#34;/path/to/sketch.js&amp;#34; lib1=&amp;#34;https://cdntolib1/lib1.js&amp;#34; &amp;gt;}} All parameters are optional but sketch. Default values are shown in the above snippet but for libs*. Up to lib5 libs may be specified.
Scintillating grid # Look at this and also this among many more references there are.
p5-div markdown {{&amp;lt; p5-div sketch=&amp;#34;/showcase/sketches/scintillating.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/visual-Illusions/MachBands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/visual-Illusions/MachBands/</guid><description>Mach Bands # Terrain with Perlin noise # Problema # Desarrolle una aplicación de visualización de terreno. Mira el tutorial de generación de terreno 3D con codificación de Perlin Noise.
Introducción # La visualización de terrenos es una técnica utilizada en muchas áreas, como la cartografía, la planificación urbana, la ingeniería y la simulación. En la actualidad, el desarrollo de tecnologías de visualización 3D ha permitido la creación de modelos digitales de terrenos con mayor precisión y detalle, lo que ha permitido el desarrollo de aplicaciones de visualización de terrenos cada vez más sofisticadas y útiles.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/visual-Illusions/masking/Image-quantization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/visual-Illusions/masking/Image-quantization/</guid><description>Image Quantization # Ejercicio
A continuación se explican y se implementan algunas aplicaciones visuales de dither. Introducción # La animación dither es una técnica de efecto visual que se utiliza para crear la ilusión de un gradiente suave utilizando patrones de píxeles pequeños. Esta técnica se ha utilizado desde hace mucho tiempo en la industria del cine y la televisión para simular un rango de colores más amplio de lo que realmente es posible mostrar en una pantalla.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/visual-Illusions/Spatial-Coherence-/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/visual-Illusions/Spatial-Coherence-/</guid><description>Spacial Coherence # Pixelator Demo # Ejercicio
A continuación se implementa una aplicación de video pixelador y se realiza una evaluación comparativa de los resultados (promedio de color frente a coherencia espacial). Y se evaluará cobre la calidad visual de los resultados. Introducción # El pixelado de videos es una técnica utilizada para ocultar o difuminar ciertas partes de una imagen en movimiento. Esta técnica se basa en la reducción del tamaño de los píxeles que componen la imagen, lo que resulta en una apariencia borrosa y poco clara de la parte de la imagen pixelada.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/visual-Illusions/masking/convolution/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/visual-Illusions/masking/convolution/</guid><description>Convolution # Problema a resolver # Implementar un programa que permita implementar distintos kernels.
Introducción # Los filtros de convolución son herramientas esenciales en el procesamiento de imágenes. Son matrices numéricas que se aplican a una imagen para resaltar características específicas de la misma, como bordes, texturas y detalles. El proceso de convolución consiste en deslizar el filtro por la imagen y calcular el producto punto entre los valores del filtro y los valores de la imagen en la región de la imagen que coincide con el filtro en cada posición.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/visual-Illusions/masking/histogram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/visual-Illusions/masking/histogram/</guid><description>Histogram # Problema # Implemente un programa que soporte la visualización del histograma de una imagen Introducción # Los histogramas RGB (Red-Green-Blue) son una representación gráfica de la distribución de los niveles de intensidad de los componentes rojo, verde y azul de una imagen. Cada componente de color se mide en una escala de 0 a 255, donde 0 representa la ausencia del color y 255 representa la presencia máxima del color.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/visual-Illusions/masking/kinegram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/visual-Illusions/masking/kinegram/</guid><description>Kinegram # Problema a resolver # Implementar un kinegrama.
Introducción # En términos de ilusiones visuales, un kinegrama es una técnica que crea la ilusión de movimiento a través de una serie de imágenes estáticas. Es similar a una animación, pero en lugar de mostrar una secuencia continua de imágenes, utiliza una serie de imágenes discretas que se reproducen rápidamente para crear la ilusión de movimiento. En otras palabras, un kinegrama es una serie de imágenes que se reproducen en rápida sucesión para crear la ilusión de que la imagen está en movimiento.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/visual-Illusions/masking/lightness/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/visual-Illusions/masking/lightness/</guid><description>Lightness variation # Problema a resolver # Implementar un programa que permita variar la luminosidad de una imagen.
Introducción # La luminosidad de una imagen se refiere a la cantidad de luz o brillo presente en la imagen en su totalidad. En términos de procesamiento de imágenes digitales, la luminosidad se puede medir en una escala de valores numéricos, que van desde 0 (negro total) hasta 255 (blanco total) en el espacio de color RGB (rojo, verde, azul).</description></item><item><title/><link>https://joluva.github.io/showcase/docs/visual-Illusions/masking/moire-pattern/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/visual-Illusions/masking/moire-pattern/</guid><description>Moiré pattern # Problema a resolver # Implementar un patrón de Moiré.
Introducción # Un patrón de moiré es un patrón de interferencia visual que se produce cuando dos patrones de líneas se superponen en un ángulo específico. El patrón resultante puede ser una serie de bandas oscuras y claras o un patrón de ondulaciones que parecen moverse o vibrar, incluso cuando las líneas individuales están estáticas. El patrón de moiré se produce porque las líneas de los dos patrones se superponen y crean zonas de mayor o menor densidad de líneas en diferentes lugares de la superposición.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/visual-Illusions/Temporal-Coherence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/visual-Illusions/Temporal-Coherence/</guid><description>Temporal Coherence # Ejercicio 9 # Implementar una animación usando key frames.
Introducción # Una animación con keyframes es una técnica de animación en la que se establecen ciertos puntos clave (conocidos como "keyframes" en inglés) en la línea de tiempo de una animación para definir la posición, la escala, la rotación o cualquier otro atributo de un objeto o personaje en un momento específico de la animación. Estos puntos clave representan momentos importantes en la animación, como cambios de dirección, saltos, gestos o cualquier otra acción que se desee que el personaje o objeto realice.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/visual-Illusions/Depth-perception/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/visual-Illusions/Depth-perception/</guid><description>Depth Perception # Biocular cues # Ejercicio 10 # Problema # Implemente un sketch en 2D que engañe al ojo para hacerlo percibir imágenes en 3D
Introducción # El paralaje de movimiento es un efecto visual que se produce cuando un observador se mueve en relación a un objeto o entorno, lo que causa un cambio en la posición aparente de los objetos cercanos y lejanos en relación al observador.</description></item><item><title>Creating a New Theme</title><link>https://joluva.github.io/showcase/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/posts/creating-a-new-theme/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://joluva.github.io/showcase/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/posts/migrate-from-jekyll/</guid><description>Move static content to static # Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>(Hu)go Template Primer</title><link>https://joluva.github.io/showcase/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://joluva.github.io/showcase/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description></item><item><title/><link>https://joluva.github.io/showcase/docs/shortcodes/buttons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/shortcodes/buttons/</guid><description> Buttons # Buttons are styled links that can lead to local page or external link.
Example # {{&amp;lt; button relref=&amp;#34;/&amp;#34; [class=&amp;#34;...&amp;#34;] &amp;gt;}}Get Home{{&amp;lt; /button &amp;gt;}} {{&amp;lt; button href=&amp;#34;https://github.com/alex-shpak/hugo-book&amp;#34; &amp;gt;}}Contribute{{&amp;lt; /button &amp;gt;}} Get Home Contribute</description></item><item><title/><link>https://joluva.github.io/showcase/docs/shortcodes/columns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/shortcodes/columns/</guid><description>Columns # Columns help organize shorter pieces of content horizontally for readability.
{{&amp;lt; columns &amp;gt;}} &amp;lt;!-- begin columns block --&amp;gt; # Left Content Lorem markdownum insigne... &amp;lt;---&amp;gt; &amp;lt;!-- magic separator, between columns --&amp;gt; # Mid Content Lorem markdownum insigne... &amp;lt;---&amp;gt; &amp;lt;!-- magic separator, between columns --&amp;gt; # Right Content Lorem markdownum insigne... {{&amp;lt; /columns &amp;gt;}} Example # Left Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!</description></item><item><title/><link>https://joluva.github.io/showcase/docs/shortcodes/details/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/shortcodes/details/</guid><description> Details # Details shortcode is a helper for details html5 element. It is going to replace expand shortcode.
Example # {{&amp;lt; details &amp;#34;Title&amp;#34; [open] &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /details &amp;gt;}} Title Markdown content # Lorem markdownum insigne&amp;hellip; Title Markdown content # Lorem markdownum insigne&amp;hellip;</description></item><item><title/><link>https://joluva.github.io/showcase/docs/shortcodes/hints/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/shortcodes/hints/</guid><description>Hints # Hint shortcode can be used as hint/alerts/notification block.
There are 3 colors to choose: info, warning and danger.
{{&amp;lt; hint [info|warning|danger] &amp;gt;}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{&amp;lt; /hint &amp;gt;}} Example # Markdown content
Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa Markdown content</description></item><item><title/><link>https://joluva.github.io/showcase/docs/shortcodes/katex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/shortcodes/katex/</guid><description>KaTeX # KaTeX shortcode let you render math typesetting in markdown document. See KaTeX
Example # {{&amp;lt; katex [display] [class=&amp;#34;text-center&amp;#34;] &amp;gt;}} f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi {{&amp;lt; /katex &amp;gt;}} \[f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi\] Display Mode Example # Here is some inline example: \(\pi(x)\) , rendered in the same line. And below is display example, having display: block \[f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi\] Text continues here.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/shortcodes/mermaid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/shortcodes/mermaid/</guid><description>Mermaid Chart # MermaidJS is library for generating svg charts and diagrams from text.
Override Mermaid Initialization Config
To override the initialization config for Mermaid, create a mermaid.json file in your assets folder!
Example # {{&amp;lt; mermaid [class=&amp;#34;text-center&amp;#34;]&amp;gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --&amp;gt; State2 note left of State2 : This is the note to the left.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/shortcodes/tabs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/shortcodes/tabs/</guid><description>Tabs # Tabs let you organize content by context, for example installation instructions for each supported platform.
{{&amp;lt; tabs &amp;#34;uniqueid&amp;#34; &amp;gt;}} {{&amp;lt; tab &amp;#34;MacOS&amp;#34; &amp;gt;}} # MacOS Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; tab &amp;#34;Linux&amp;#34; &amp;gt;}} # Linux Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; tab &amp;#34;Windows&amp;#34; &amp;gt;}} # Windows Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; /tabs &amp;gt;}} Example # MacOS MacOS # This is tab MacOS content.
Lorem markdownum insigne. Olympo signis Delphis!</description></item></channel></rss>