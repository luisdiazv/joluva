<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Showcase Template</title><link>https://joluva.github.io/showcase/docs/visual-Illusions/</link><description>Recent content on Showcase Template</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://joluva.github.io/showcase/docs/visual-Illusions/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://joluva.github.io/showcase/docs/visual-Illusions/Coloring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/visual-Illusions/Coloring/</guid><description>Coloring # Color blindness # Problema # Implementar una aplicación de mapeo de colores que ayude a las personas daltónicas a ver los colores que les rodean.
Introducción # La daltonismo es una discapacidad visual que afecta a aproximadamente el 8% de la población masculina y el 0.5% de la población femenina. Esta condición hace que las personas tengan dificultades para distinguir ciertos colores y tonalidades, lo que puede dificultar su vida cotidiana en situaciones en las que los colores son importantes, como la señalización vial o la elección de la ropa.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/visual-Illusions/MachBands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/visual-Illusions/MachBands/</guid><description>Mach Bands # Terrain with Perlin noise # Problema # Desarrolle una aplicación de visualización de terreno. Mira el tutorial de generación de terreno 3D con codificación de Perlin Noise.
Introducción # La visualización de terrenos es una técnica utilizada en muchas áreas, como la cartografía, la planificación urbana, la ingeniería y la simulación. En la actualidad, el desarrollo de tecnologías de visualización 3D ha permitido la creación de modelos digitales de terrenos con mayor precisión y detalle, lo que ha permitido el desarrollo de aplicaciones de visualización de terrenos cada vez más sofisticadas y útiles.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/visual-Illusions/Spatial-Coherence-/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/visual-Illusions/Spatial-Coherence-/</guid><description>Spacial Coherence # Pixelator Demo # Ejercicio
A continuación se implementa una aplicación de video pixelador y se realiza una evaluación comparativa de los resultados (promedio de color frente a coherencia espacial). Y se evaluará cobre la calidad visual de los resultados. Introducción # El pixelado de videos es una técnica utilizada para ocultar o difuminar ciertas partes de una imagen en movimiento. Esta técnica se basa en la reducción del tamaño de los píxeles que componen la imagen, lo que resulta en una apariencia borrosa y poco clara de la parte de la imagen pixelada.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/visual-Illusions/Temporal-Coherence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/visual-Illusions/Temporal-Coherence/</guid><description>Temporal Coherence # Problema # Implementar una animación usando key frames.
Introducción # Una animación con keyframes es una técnica de animación en la que se establecen ciertos puntos clave (conocidos como "keyframes" en inglés) en la línea de tiempo de una animación para definir la posición, la escala, la rotación o cualquier otro atributo de un objeto o personaje en un momento específico de la animación. Estos puntos clave representan momentos importantes en la animación, como cambios de dirección, saltos, gestos o cualquier otra acción que se desee que el personaje o objeto realice.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/visual-Illusions/Depth-perception/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/visual-Illusions/Depth-perception/</guid><description>Depth Perception # Biocular cues # Problema # Implemente un sketch en 2D que engañe al ojo para hacerlo percibir imágenes en 3D
Introducción # El paralaje de movimiento es un efecto visual que se produce cuando un observador se mueve en relación a un objeto o entorno, lo que causa un cambio en la posición aparente de los objetos cercanos y lejanos en relación al observador. Este efecto se debe a que los objetos más cercanos al observador parecen moverse más rápidamente que los objetos más lejanos cuando el observador se mueve.</description></item><item><title/><link>https://joluva.github.io/showcase/docs/visual-Illusions/VideoSustentacion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joluva.github.io/showcase/docs/visual-Illusions/VideoSustentacion/</guid><description> Video Sustentación # Link: https://youtu.be/yeVsRWnk-_U #</description></item></channel></rss>